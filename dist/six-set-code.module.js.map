{"version":3,"file":"six-set-code.module.js","sources":["../src/six-set-code.js"],"sourcesContent":["import * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport const TITLE = \"Set Account Code\"\nexport const DESCRIPTION = \"Set an Account Code on Flow with given code.\"\nexport const VERSION = \"0.0.0\"\nexport const HASH = \"7375dc3feb96e2f8061eff548220a96bf77ceb17affd1ac113f10d15411a92c4\"\nexport const CODE = \n`transaction(code: String) {\n    prepare(acct: AuthAccount) {\n        acct.setCode(code.decodeHex())\n    }\n}`\n\nexport const template = ({ proposer, authorization, payer, code = \"\" }) => sdk.pipe([\n    sdk.transaction(CODE),\n    sdk.args([sdk.arg(Buffer.from(code, \"utf8\").toString(\"hex\"), t.String)]),\n    sdk.proposer(proposer),\n    sdk.authorizations([authorization]),\n    sdk.payer(payer),\n    sdk.validator((ix, {Ok, Bad}) => {\n        if (ix.authorizations.length > 1) return Bad(ix, \"template only requires one authorization.\")\n        return Ok(ix)\n    })\n])\n"],"names":["TITLE","DESCRIPTION","VERSION","HASH","CODE","template","proposer","authorization","payer","code","sdk","Buffer","from","toString","t","ix","Ok","authorizations","length","Bad"],"mappings":"0KAGaA,IAAAA,EAAQ,mBACRC,EAAc,+CACdC,EAAU,QACVC,EAAO,mEACPC,oHAOAC,EAAW,gBAAGC,IAAAA,SAAUC,IAAAA,cAAeC,IAAAA,UAAOC,KAAAA,aAAO,YAASC,EAAS,CAChFA,EAAgBN,GAChBM,EAAS,CAACA,EAAQC,OAAOC,KAAKH,EAAM,QAAQI,SAAS,OAAQC,KAC7DJ,EAAaJ,GACbI,EAAmB,CAACH,IACpBG,EAAUF,GACVE,EAAc,SAACK,SAAKC,IAAAA,GAChB,OAAID,EAAGE,eAAeC,OAAS,GAAUC,IADrBA,KACyBJ,EAAI,6CAC1CC,EAAGD"}